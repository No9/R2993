package org.no9.r2993;

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.widget.Button; 
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;

public class RelayManager extends Activity {

	private static final int VID = 0x2341;
	private static final int PID_UNO = 0x0043;
	private static final int PID_MEGA = 0x0044;
	private static UsbController sUsbController;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_relay_manager);
        appendToTextField("\n");
        ((Button)findViewById(R.id.btnStart)).setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				
				int PID = 0x0043;
				RadioGroup radioDeviceType = (RadioGroup) findViewById(R.id.radioBoardType);;
				
				int selectedId = radioDeviceType.getCheckedRadioButtonId();
				RadioButton radioDeviceButton = (RadioButton) findViewById(selectedId);
			    appendToTextField("Trying to Find: " + radioDeviceButton.getText() + "\n"); 
				
			    switch(selectedId){
			    case 0 :
			    	PID = PID_UNO;
			    	break;
			    
			    case 1 :
			    	PID = PID_MEGA;
			    	break;
			    
			    default :
			    	PID = PID_UNO;
			    	break;
			    }
				
				if(sUsbController == null)
					sUsbController = new UsbController(RelayManager.this, mConnectionHandler, VID, PID);
				else{
					sUsbController.stop();
					sUsbController = new UsbController(RelayManager.this, mConnectionHandler, VID, PID);
				}
			}
		});
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_relay_manager, menu);
        return true;
    }
    
    private void appendToTextField(String text){
    	EditText edt = (EditText)findViewById(R.id.editText1);
		edt.append(text);
    }
    
    private final IUsbConnectionHandler mConnectionHandler = new IUsbConnectionHandler() {
		@Override
		public void onUsbStopped() {
			String msg = "Usb stopped!\n"; 
			EditText edt = (EditText)findViewById(R.id.editText1);
			edt.append(msg);
			L.e(msg);
		}
		
		@Override
		public void onErrorLooperRunningAlready() {
			String msg = "Looper already running!\n";
			EditText edt = (EditText)findViewById(R.id.editText1);
			edt.append(msg);
			L.e(msg);
		}
		
		@Override
		public void onUsbStarted() {
			String msg = "Usb Started!\n";
			EditText edt = (EditText)findViewById(R.id.editText1);
			edt.append(msg);
			L.e(msg);
		}
		
		@Override
		public void onUsbData() {
			String msg = "Usb Data!\n";
			EditText edt = (EditText)findViewById(R.id.editText1);
			edt.append(msg);
			L.e(msg);
		}
		
		
		@Override
		public void onDeviceNotFound() {
			String msg = "Device Not Found!\n";
			EditText edt = (EditText)findViewById(R.id.editText1);
			edt.append(msg);
			L.e(msg);
			
			if(sUsbController != null){
				sUsbController.stop();
				sUsbController = null;
				String usbmsg = "UsbController Stopped!\n";
				edt = (EditText)findViewById(R.id.editText1);
				edt.append(usbmsg);
				L.e(msg);
			}
		}
	};
    
}
