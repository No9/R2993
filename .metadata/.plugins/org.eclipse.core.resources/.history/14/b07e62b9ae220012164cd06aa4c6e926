package org.no9.r2993;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import android.app.Activity;
import android.content.Context;
import android.util.Log;


public class SocketController implements Runnable{

	
	public static final String SERVERIP = "127.0.0.1";
	public static final int SERVERPORT = 4444;
	private final ISocketConnectionHandler mConnectionHandler;
	private final Context mApplicationContext;
	private final Thread mThread;
	public SocketController(Activity parentActivity, ISocketConnectionHandler handler){
		mConnectionHandler = handler;
		mApplicationContext = parentActivity.getApplicationContext();
		mThread = new Thread(this);
		mThread.start();
	}
	/*
	private void init() {
		enumerate(new IPermissionListener() {
			@Override
			public void onPermissionDenied(UsbDevice d) {
				UsbManager usbman = (UsbManager) mApplicationContext
						.getSystemService(Context.USB_SERVICE);
				PendingIntent pi = PendingIntent.getBroadcast(
						mApplicationContext, 0, new Intent(
								ACTION_USB_PERMISSION), 0);
				mApplicationContext.registerReceiver(mPermissionReceiver,
						new IntentFilter(ACTION_USB_PERMISSION));
				usbman.requestPermission(d, pi);
			}
		});
	}
	*/
	public void run() {
		 
        try {
        	
        	
            ServerSocket serverSocket = new ServerSocket(SERVERPORT);
            mConnectionHandler.onConnected();
        	
            while (true) {              

                Socket client = serverSocket.accept();
                try {



                     BufferedReader in = new BufferedReader(new InputStreamReader(client.getInputStream()));

                     String str = in.readLine();
                     
                     mConnectionHandler.onData(str);
                     l("Socket Data: " + str);
              
                } catch(Exception e) {

                	l("Error in buffer reader: " + e.getMessage() + "\n");
                	e(e);
                	mConnectionHandler.onError("Error in buffer reader: " + e.getMessage() + "\n");
                    
                } finally {

                       client.close();
                       mConnectionHandler.onClientClosed();
                       l("S: Done.");
                   }
            }      

        } catch (Exception e) {
        	mConnectionHandler.onError("Error in connection : " + e.getMessage() + "\n");
            l("S: Error");
            e(e);
        }
   }
	
	public final static String TAG = "SocketController";
    
    private void l(Object msg) {
		Log.d(TAG, ">==< " + msg.toString() + " >==<");
	}
    
    private void e(Object msg) {
		Log.e(TAG, ">==< " + msg.toString() + " >==<");
	}
	
}
