package org.no9.r2993;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import android.app.Activity;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.hardware.usb.UsbDevice;
import android.hardware.usb.UsbManager;

public class SocketController implements Runnable{

	
	public static final String SERVERIP = "127.0.0.1";
	public static final int SERVERPORT = 4444;
	private final ISocketConnectionHandler mConnectionHandler;
	private final Context mApplicationContext;
	
	public SocketController(Activity parentActivity, ISocketConnectionHandler handler){
		mConnectionHandler = handler;
		mApplicationContext = parentActivity.getApplicationContext();
	}
	/*
	private void init() {
		enumerate(new IPermissionListener() {
			@Override
			public void onPermissionDenied(UsbDevice d) {
				UsbManager usbman = (UsbManager) mApplicationContext
						.getSystemService(Context.USB_SERVICE);
				PendingIntent pi = PendingIntent.getBroadcast(
						mApplicationContext, 0, new Intent(
								ACTION_USB_PERMISSION), 0);
				mApplicationContext.registerReceiver(mPermissionReceiver,
						new IntentFilter(ACTION_USB_PERMISSION));
				usbman.requestPermission(d, pi);
			}
		});
	}
	*/
	public void run() {
		 
        try {
        	
        	
            ServerSocket serverSocket = new ServerSocket(SERVERPORT);
            mConnectionHandler.onConnected();
        	
            while (true) {              

                Socket client = serverSocket.accept();
                try {



                     BufferedReader in = new BufferedReader(new InputStreamReader(client.getInputStream()));

                     String str = in.readLine();
                     mConnectionHandler.onData(str);	

                } catch(Exception e) {

                	mConnectionHandler.onError();
                    System.out.println("S: Error");
                    e.printStackTrace();
                } finally {

                       client.close();
                       mConnectionHandler.onClientClosed();
                       System.out.println("S: Done.");
                   }
            }      

        } catch (Exception e) {
        	mConnectionHandler.onError();
            System.out.println("S: Error");
            e.printStackTrace();
        }

   }
}
